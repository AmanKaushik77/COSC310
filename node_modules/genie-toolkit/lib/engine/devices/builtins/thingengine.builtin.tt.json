"class @org.thingpedia.builtin.thingengine.builtin\n#_[thingpedia_name=\"Miscellaneous Interfaces\"]\n#_[thingpedia_description=\"Commands that are always available and don't belong to any specific device or account. Mostly related to time and randomness, because the universe is chaos and those always there. Also debugging.\"]\n#_[name=\"Miscellaneous Interfaces\"]\n#_[description=\"Commands that are always available and don't belong to any specific device or account. Mostly related to time and randomness, because the universe is chaos and those always there. Also debugging.\"]\n#_[canonical=\"miscellaneous interfaces\"]\n#[repository=\"https://github.com/stanford-oval/genie-toolkit\"]\n#[subcategory=\"service\"]\n#[license=\"Apache-2.0\"]\n#[license_gplcompatible=true]\n{\n  import loader from @org.thingpedia.builtin();\n  import config from @org.thingpedia.config.builtin();\n\n  monitorable query get_gps(out location: Location\n                            #_[canonical={\n                              default=\"preposition\",\n                              base=[\"coordinates\"],\n                              preposition=[\"in #\", \"at #\", \"around #\"]\n                            }],\n                            out altitude: Measure(m)\n                            #_[canonical={\n                              default=\"base\",\n                              base=[\"altitude\"],\n                              preposition=[\"at # above sea level\"]\n                            }]\n                            #[min_number=0m]\n                            #[max_number=15000m], // not approved for use in the ISS\n                            out bearing: Number\n                            #_[canonical={\n                              base=[\"bearing\"],\n                              passive_verb=[\"facing #\"] // FIXME we want to say \"facing 30 degrees north\" but we can't quite do that...\n                            }],\n                            out speed: Measure(mps)\n                            #_[canonical={\n                              base=[\"speed\"],\n                              passive_verb=[\"going at #\", \"moving at #\"],\n                              preposition=[\"at #\"]\n                            }]\n                            )\n  #_[canonical=[\"my current location\", \"my current position\", \"my current geocoordinates\"]]\n  #_[confirmation=\"your location\"]\n  #_[formatted=[{type=\"text\",text=\"Current Location: ${location}\"}]]\n  #[minimal_projection=[\"location\"]]\n  #[poll_interval=0ms]\n  #[doc=\"get last known GPS location\"]\n  #[confirm=false];\n\n  query get_time(out time: Time\n                 #_[canonical=[\"time\"]]\n                 #[filterable=false])\n  #[result=[\"it 's ${time}\", \"the current time is ${time}\", \"now it 's ${time}\"]]\n  #_[canonical=[\"time\", \"current time\", \"time of day\"]]\n  #_[confirmation=\"the current time\"]\n  #_[formatted=[{type=\"text\",text=\"Current time is ${time:time}.\"}]]\n  #[doc=\"get the current time\"]\n  #[confirm=false];\n\n  query get_date(out date: Date\n                 #_[canonical=[\"date\"]]\n                 #[filterable=false])\n  #_[canonical=[\"date\", \"current date\", \"today 's date\"]]\n  #_[confirmation=\"today's date\"]\n  #_[formatted=[{type=\"text\",text=\"Today is ${date:date}.\"}]]\n  #[doc=\"get the current date\"]\n  #[confirm=false];\n\n  query get_random_between(in opt low: Number\n                           #_[canonical={\n                             base=[\"lower bound\", \"minimum number\"],\n                             passive_verb=[\"higher than #\", \"more than #\"] // the sentence is \"give me a random number higher than X\", so \"higher than X\" is pvp not apv\n                           }],\n                           in opt high: Number\n                           #_[canonical={\n                             base=[\"upper bound\", \"maximum number\"],\n                             passive_verb=[\"higher than #\", \"more than #\"] // the sentence is \"give me a random number higher than X\", so \"higher than X\" is pvp not apv\n                           }],\n                           out random: Number\n                           #_[canonical={\n                             base=[\"number\", \"result\"],\n                           }]\n                           #[filterable=false])\n  #_[canonical=[\"random number\", \"random integer\"]]\n  #_[result=[\"${random}\", \"your number is ${random}\", \"i chose ${random}\"]]\n  #_[confirmation=\"a random integer between $low and $high\"]\n  #_[formatted=[{type=\"text\",text=\"${random}\"}]]\n  #[doc=\"get a uniform random integer between `low` and `high`\"]\n  #[confirm=false];\n\n  monitorable list query device(out id : Entity(tt:device)\n                                #_[canonical={\n                                   base=[\"name\"],\n                                   passive_verb=[\"named #\", \"called #\"],\n                                }],\n                                out description : String\n                                #_[canonical={\n                                   base=[\"description\"]\n                                }]\n                                #[string_values=\"tt:short_free_text\"]\n                                #[filterable=false],\n                                out category : Enum(service, media, social_network, communication, home, health, data_management)\n                                #_[canonical={\n                                   base=[\"category\"],\n                                   adjective=[\"#\"],\n                                   preposition=[\"in the # category\"]\n                                }],\n                                out website : Entity(tt:url)\n                                #_[canonical={\n                                   base=[\"website\", \"link\", \"url\"]\n                                }]\n                                #[filterable=false])\n  #_[canonical=[\"device\", \"skill\", \"thingpedia device\", \"supported skill\"]]\n  #_[confirmation=\"Thingpedia devices\"]\n  #_[formatted=[{type=\"text\",text=\"${random}\"}]]\n  #[doc=\"list supported Thingpedia devices\"]\n  #[poll_interval=1day]\n  #[confirm=false];\n\n  list query commands(out id : Entity(tt:command_id),\n                      out device: Entity(tt:device)\n                      #_[canonical={\n                        base=[\"device\", \"account\", \"skill\"],\n                        adjective=[\"# 's\"],\n                        preposition=[\"of #\", \"in #\"]\n                      }]\n                      #_[prompt=[\"what device do you want help for\", \"for what device\"]],\n                      out program: Entity(tt:program)\n                      #_[canonical=[\"program\", \"command\"]]\n                      #[filterable=false])\n  #_[canonical=\"supported command\"]\n  #_[confirmation=\"the list of commands of $device\"]\n  #_[formatted=[{type=\"text\",text=\"${program}\"}]]\n  #[doc=\"retrieve the list of supported commands for the given device\"]\n  #[confirm=false];\n\n  action open_url(in req url: Entity(tt:url)\n                  #_[prompt=[\"what url do you want to open\", \"what do you want to open\"]]\n                  #_[canonical={\n                    base=[\"url\", \"link\", \"page\"],\n                    preposition=[\"to #\"]\n                  }])\n  #_[canonical=[\"open a url\", \"open a link\"]]\n  #_[confirmation=\"open $url\"]\n  #[doc=\"open a file/link\"]\n  #[confirm=false];\n\n  action say(in req message: String\n             #_[prompt=\"what do you want me to say\"]\n             #[string_values=\"tt:long_free_text\"]\n             #_[canonical=\"message\"],\n             out message_output: String\n             #_[canonical=\"message\"])\n  #_[result=\"${message_output}\"]\n  #_[canonical=\"say\"]\n  #_[confirmation=\"send me a message $message\"]\n  #[doc=\"makes Almond say something\"]\n  #[confirm=false];\n\n  action debug_log(in req message: String\n                   #_[prompt=[\"what should i write in the logs\", \"what do you want me to write\"]]\n                   #[string_values=\"tt:long_free_text\"]\n                   #_[canonical=\"message\"])\n  #_[canonical=[\"log a message\", \"record a message\", \"write a message in the logs\"]]\n  #_[confirmation=\"write $message in the developer logs\"]\n  #[doc=\"log a message in the developer logs\"]\n  #[confirm=false];\n\n/*\n  action configure(in req device: Entity(tt:device) #_[prompt=\"What device do you want to configure?\"])\n  #_[canonical=\"configure\"]\n  #_[confirmation=\"configure a new $device\"]\n  #_[confirmation_remote=\"configure a new $device on $__person's Almond\"]\n  #[doc=\"configure a specific device by type\"]\n  #[confirm=false];\n\n  action discover()\n  #_[canonical=\"discover\"]\n  #_[confirmation=\"search for new devices\"]\n  #_[confirmation_remote=\"search for new devices on $__person's Almond\"]\n  #[doc=\"start interactive discovery for new devices\"]\n  #[confirm=false];\n*/\n}\n\n"
